if _.isArray(data)
  each item in data 
    != partial('frame', { data: item })
else if _.isArray(data.items)
  - var items = data.items
  - delete data.items
  each item in items
    - var result = { data: _.assign({}, data, _.isPlainObject(item) ? item : { raw: item, escaped: _.escape(item) }) }
    != partial('frame', result)
else
  - var cls = 'c-frame'
  - var js = 'js-frame'
  - var modifier = data.modifier ? cls + data.modifier : '' 
  - data = Object.prototype.toString.call(data) !== '[object Object]' ? { raw: data, escaped: _.escape(data) } : data
  - var lang = data.language || data.lang || 'json'
  - var blockinfo = (token || {}).blockinfo || {}
  - var file_path = (blockinfo.file || {}).path
  - var description = data.description
  - data.settings = data.settings || {}
  - data.settings.class = data.settings.class ? data.settings.class.replace(/\s*\./g, ' ') : ''
  - var code = blockinfo.code || {}
  - var keys = Object.keys(data).filter(function(item) {
  -   return [ 'raw', 'escaped', 'raw_stateless', 'escaped_stateless' ].indexOf(item) > -1
  - })
  - var id = 'markup-item' + global.base_x.encode(data)
  
  section(id="#{id}", class="c-frame-container")&attributes(data.settings)
    if data.description
      != data.description
    div(class="#{cls} #{js}")
      div(class="#{cls}__header")
        div(class="#{cls}__url")
          //- span(class='#{cls}__project-name')= pkg.name
          if !!file_path
            span(class="#{cls}__path") /#{file_path}
        div(class="#{cls}__actions #{js}__actions o-spacing--off")
          a(class="#{cls}__action--copy #{js}__copy") Copy
          a(class="#{cls}__action--link #{js}__link", href="##{id}") Link To
  
        span(class="#{cls}__language")= lang
        
      div(class='#{cls}__body')
        each type in keys
          - var should_highlight = type.indexOf('escaped') > -1
          - var content = data[type.replace('escaped', 'raw')] || data[type] ||  false
          - var loading =  should_highlight ? '' : 'u-loading u-loading--middle u-loading--huge is-loading'
          - type = type.replace('_', '-')
          if content
            div(
              class="#{cls}__section #{cls}__section--#{type} #{js}__section #{loading}", 
              data-type="#{type}",
              data-language="#{lang}"
            )
              if should_highlight
                - var options = {}
                - options.preCls = cls + '__pre'
                - options.codeCls = cls + '__code'
                - options.lineno = true
                - options.start = code.start || 1
                - options.language = lang
                != global.highlight(content, options)
              else
                div.u-lazy.u-lazy--fade.js-iframify
                  = partial('../iframe', { data: content })
