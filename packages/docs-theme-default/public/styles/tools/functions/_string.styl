to-string($obj) {
  if $obj is a 'string' {
    return $obj
  }

  $result = ''
  $result += val for val in split('', s('%s', $obj))
}

/// @author Tyler Benton
/// @page helpers/functions
///
/// @arg {string | arg list} - The codes to be converted into unicodes
///
/// @description converts 1 or more characters into a unicode
///
/// @returns {string}
///
/// @markup {styl} (example="false")
/// unicode('e655'); // -> "\e655"
/// unicode('e655', "e655", "e655"); // -> '\e655\e655\e655'
/// unicode('e655', 'e655', 'e655', 'space'); // -> '\e655 \e655 \e655'
unicode($args...) {
  $quote = unquote('"');
  $result = '';
  $space = nth($args, -1) == 'space' ? ' ' : ''

  for $str in $args {
    $result = $result + $space + unquote(str-insert($str, '\\', 1))
  }

  return $quote + $result + $quote;
}