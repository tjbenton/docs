/// @author Tyler Benton
/// @page helpers/functions
/// @requires map-get($config, font-size)
///
/// @arg {unit} - Pixel value to be converted
/// @arg {unit} - Base `font-size` to start from
/// @arg {number} - How many decimal places you want it to have
///
/// @returns {unit} - Returns a `em`
///
/// @markup {styl}
/// em(32px, 16px); // 2em
/// em(24px, 16px); // 1.5em
em($px, $base = $config.font-size, $round = 3) {
  $px = remove-unit($px);
  $unit = unit($base)

  if $unit == 'em' {
    $base = px($base)
  } else if $unit == 'rem' {
    $base = $config.font-size
  }

  $base = remove-unit($base)

  return $px != 0 ? (round($px / $base, $round) * 1em) : 0
}

/// @author Tyler Benton
/// @page helpers/functions
/// @requires map-get($config, font-size)
///
/// @arg {unit} - Em value to be converted
/// @arg {unit} - Base `font-size` to start from
/// @arg {number} - How many decimal places you want it to have
///
/// @returns {unit} - Returns a `px`
///
/// @markup {styl} Example
/// .foo {
///   font-size: px(1.5em, 14px)
/// }
/// @markup {css} Compiles to
/// .foo {
///   font-size: 21px;
/// }
px($em, $base = $config.font-size, $round = 0) {
  $em = remove-unit($em);
  $base = remove-unit($base != null ? unit($em) == 'rem' ? $config.font-size : $base : $config.font-size);
  return $em != 0 ? round($em * $base * 1px, $round) : 0
}