@import 'functions/index'

////
/// @author Tyler Benton
/// @page helpers/variables
////

/// @author tyler benton
/// @page helpers/variables
/// @type {map}
color-set({
  'colors': {
    // 'a': { '0': #7e7e7c, 'color-name': 'gray' },
    // 'a': { '0': #191919, 'color-name': 'gray' },
    'a': { '0': #333, 'color-name': 'gray' },
    'b': { '0': #0076be, 'color-name': 'blue' },
    'c': { '0': #894082, 'color-name': 'purple' },
    'd': { '0': #2a7137, 'color-name': 'green' },
    'e': { '0': #d44029, 'color-name': 'red' },
    'f': { '0': #ec6c21, 'color-name': 'orange' },
    'star': {
      '0': #f8c264, // for star ratings
      'name': 'yellow'
    }
  }
})

/// @name $config
/// @description
/// This is a map of defaults that are used throughout the site to make things more consitant.
///
/// @type {hash} - Site defaults
///
/// @markup {styl}
/// .foo
///   border-radius $config.border-radius
$spacing = 1.45em;
$config = {
  'border-radius': 6px,
  'border-color': #fff,
  'color': blue,
  'border-color': color(a, -6),
  'color': color(a, 2),
  'font-family': unquote('Source Sans Pro, Helvetica, Arial, sans-serif'),
  'font-size': 14px,
  'line-height': $spacing,
  'spacing': $spacing,
  'spacing-sizes': {
    'off': 0,
    'tiny': $spacing / 4,
    'small': $spacing / 2,
    'medium': $spacing,
    'large': $spacing * 1.50,
    'huge': $spacing * 2.25
  },
  'padding': 10px
}

// @author Tyler Benton
// @page helpers/variables
// @type {string}
// @description
// This is used to select all elements that aren't hidden.
$not-hidden = ':not(style):not(link):not(meta):not(script)'

$lightgrey = #999
$linkColor = #555
$grey = #eee
$black = #222
$white = #f7f7f7

// @type {map}
$alert-settings = {
  'success': {
    '0': #3c763d,
    '-5': #dff0D8,
    'name': 'green',
    'icon': 'check'
  },
  'info': {
    '0': #31708f,
    '-5': #d9edf7,
    'name': 'blue',
    'icon': 'info'
  },
  'warning': {
    '0': #8a6d3b,
    '-5': #fcf8e3,
    'name': 'tan',
    'icon': 'warning'
  },
  'danger': {
    '0': #a94442,
    '-5': #f2dede,
    'name': 'red',
    'icon': 'delete'
  }
}

// @author Tyler Benton
// @page helpers/variables
// @type {map}
// @description
// This is used to set the padding on the o-site-wrapper__inverted
$o-site-wrapper = {
  'base': 10px,
  'md': 30px,
  'lg': 40px
}

// @author Tyler Benton
// @page helpers/variables
// @type {map}
$paths = {
  'img': '../images',
  'font': '../images/fonts'
}


// @author Tyler Benton
// @description - These are some useful easing functions
// @page helpers/variables
// @type {map}
$easing = {
  'swift': cubic-bezier(0.55, 0, 0.1, 1),
  'bounce': cubic-bezier(0.19, 1.32, 0.48, 1)
};

// @author Tyler Benton
// @description - If you use z-index somewhere add it to this map so we can easily see what's on top and what's not.
// @page helpers/variables
// @type {map} - Map of all the `z-index`'s used in the site.
$z-index = {};

// @author Tyler Benton
// @page helpers/variables
// @type {map} - Map of all the default media queries
$breakpoints = {
  'sm': 568px,
  'md': 768px,
  'lg': 1024px,
  'xl': 1400px
}

// Why we should use sm, md, lg, and xl
//  1. Responsive design is based off of the width of the browser not device.
//  2. There is too much cross over between tablets and laptops
//  3. Sites should be designed as if they were device indpenedent.
//     For example if you had three windows open on your laptop and they're
//     spaced out into 1/3 that size would be roughly 400px wide. It's still
//     a desktop, it just has a smaller window size.
//  4. Mobile, tablet, laptop, desktop is too specific in terms of device.
//  5. You are supposed to change your media querys based off of your content.
//  6. Going with sm, md, lg, and xl is very generic and can be updated to fit any size project.
//  7. It is considered best practice.
//  8. A xs size should be the starting size of your styles and there fore doesn't need a media query.
//  9. "mobile, mobile-l, phablet, phablet-l, tablet, tablet-l, laptop, desktop" is to many different
//      screen sizes and would end up generating **4x** the amount of code when writing helper classes.
//      They're also more characters that have to go over the wire which could cause the file size to go up.
//  10. Touch devices should be styled using the `.touch` class generated by modernizr
//  11. Modernizr uses feature detection instead of writing browser specific styles.
//      This goes hand in hand with writing sites based off of screen width instead of type of device.
//  12. sm, md, lg, xl methodology is already being used on the motives site with bootstrap, and in our email templates.
//  13. I'm going to stop here but there're hundreds of reasons why using "mobile, mobile-l, phablet, phablet-l, tablet, tablet-l, laptop, desktop"
//      is a bad way to go.

// @author Tyler Benton
// @page helpers/variables
// @type {map} - Map of all media query expressions
$retina2x = '(-webkit-min-device-pixel-ratio: 2)' '(min--moz-device-pixel-ratio: 2)' '(min-resolution: 192dpi)' '(min-resolution: 2dppx)'
$retina3x = '(-webkit-min-device-pixel-ratio: 3)' '(min--moz-device-pixel-ratio: 3)' '(min-resolution: 350dpi)' '(min-resolution: 3dppx)'
$media-expressions = {
  'screen': 'screen',
  'print': 'print',
  'handheld': 'handheld',
  'retina2x': $retina2x,
  'retina3x': $retina3x
}

// @author Tyler Benton
// @page helpers/variables
// @type {map} - Map of the o-grid settings
$grid = {
  'namespace': 'col',
  'columns': 12,
  'gutter': $config.spacing,
  'row-spacing': $config.spacing
}

// @author Tyler Benton
// @page helpers/variables
// @type {map} - Map of the default values used by icons
$icon = {
  'font-family': 'icons',
  'spacing': 10px
}

// @author Tyler Benton
// @page helpers/variables
// @type {map} - Map of the icons used
$icons = {
  'add-to-cart': 'e627',
  'add-to-list': 'e637',
  'add-to-photos': 'e647',
  'announcement': 'e628',
  'arrow-down': 'e655',
  'arrow-full-down': 'e60e',
  'arrow-full-left': 'e60d',
  'arrow-full-right': 'e60f',
  'arrow-full-up': 'e610',
  'arrow-left': 'e651',
  'arrow-right': 'e652',
  'arrow-up': 'e654',
  'autoship-bottom': 'e602',
  'autoship-top': 'e603',
  'autoship': 'e604',
  'bell': 'e620',
  'blog': 'e625',
  'bookmark': 'e61b',
  'cart': 'e630',
  'cell': 'e621',
  'check-box-outline-blank': 'e65d',
  'check-box': 'e65c',
  'check': 'e650',
  'clear-all': 'e639',
  'close-circle': 'e64f',
  'close': 'e653',
  'compress': 'e662',
  'credit-card': 'e61e',
  'delete': "e64f", // alias for close-circle
  'directions': 'e63a',
  'email': 'e63c',
  'error': 'e634',
  'expand': 'e661',
  'facebook': 'e607',
  'download': 'e645',
  'upload': 'e646',
  'fullscreen-exit': 'e657',
  'fullscreen': 'e656',
  'google-plus': 'e618',
  'half-star': 'e61d',
  'heart-outline': 'e62b',
  'heart': 'e62a',
  'help': "e608", // alias for question-mark
  'info': 'e606',
  'instagram': 'e626',
  'link': 'e61f',
  'location': 'e63b',
  'lock-open': 'e62d',
  'lock': 'e62c',
  'logged-in': 'e60a',
  'logged-out': 'e60b',
  'loyalty': 'e62e',
  'menu': 'e60c',
  'minus-circle-outline': 'e643',
  'minus-circle': 'e642',
  'minus': 'e641',
  'more-horiz': 'e658',
  'more-vert': 'e659',
  'navigation': 'e64c',
  'notifications-on': 'e65a',
  'one-cart': 'e609',
  'open-in-new': 'e62f',
  'phone': 'e638',
  'photo-library': 'e64a',
  'photo-outline': 'e648',
  'photo': 'e649',
  'pinterest': 'e601',
  'play-circle-fill': 'e635',
  'play-circle-outline': 'e636',
  'plurk': 'e629',
  'plus-box': 'e63e',
  'plus-circle-outline': 'e640',
  'plus-circle': 'e63f',
  'plus': 'e63d',
  'question-mark': 'e608',
  'radio-off': 'e65e',
  'radio-on': 'e65f',
  'reply': 'e644',
  'retweet': 'e663',
  'search': 'e613',
  'settings': 'e64e',
  'share-2': 'e61c',
  'share': 'e660',
  'slideshow': 'e64b',
  'sort-a-z': 'e623',
  'sort-z-a': 'e624',
  'star': 'e619',
  'steps-left': 'e617',
  'steps-right': 'e616',
  'tags': 'e61a',
  'ticket': 'e612',
  'twitter': 'e600',
  'unlink': 'e622',
  'view-grid': 'e64d',
  'view-list': 'e631',
  'visibility-off': 'e633',
  'visibility': 'e632',
  'warning': 'e611',
  'whatshot': 'e65b',
  'youtube': 'e605',
  'zoom-in': 'e614',
  'zoom-out': 'e615',
}



// @author Tyler Benton
// @page helpers/variables
// @description
// Use this to set the fonts that are used on the site.
// The map-key is the font family and the list is the different weights and styles you want to load.
// No need to call a mixin or do anything else. The sass script will detect the font weight and style.
// `eot`, `woff`, `ttf`, `svg` are the files that are going to be loaded.
//
// @type {map} - A map of fonts that are going to be used on the site.
//
// @note {!!!}
// The map-key you define represents the font folder and the font file prefix.
// `OpenSans/OpenSans-*.{eot, woff, ttf, svg}`
//
// @note {!}
// Options: italic, oblique, thin, extralight, extra-light, light, normal, regular, bold, medium, semi-bold, semibold, extra-bold, extrabold, ultra-bold
// The case you use should match the file name.
//
// @markup {styl} (example="false") **Example:**
// $fonts: (
//  OpenSans: (Normal, NormalItalic, Italic, Bold, "")
// );
//
// @markup {styl} (example="false") **Outputs:**
// \@font-face{
//  font-family: OpenSans;
//  src: url("../images/font/OpenSans/OpenSans-Normal.eot");
//  src: url("../images/font/OpenSans/OpenSans-Normal.eot?#iefix") format("embedded-opentype"), ...other files...;
//  font-weight: 400;
//  font-style: normal;
//  font-stretch: normal;
// }
// \@font-face{
//  font-family: OpenSans;
//  src: url("../images/font/OpenSans/OpenSans-NormalItalic.eot");
//  src: url("../images/font/OpenSans/OpenSans-NormalItalic.eot?#iefix") format("embedded-opentype"), ...other files...;
//  font-weight: 400;
//  font-style: italic;
//  font-stretch: normal;
// }
// \@font-face{
//  font-family: OpenSans;
//  src: url("../images/font/OpenSans/OpenSans-Italic.eot");
//  src: url("../images/font/OpenSans/OpenSans-Italic.eot?#iefix") format("embedded-opentype"), ...other files...;
//  font-weight: 400;
//  font-style: italic;
//  font-stretch: normal;
// }
// \@font-face{
//  font-family: OpenSans;
//  src: url("../images/font/OpenSans/OpenSans-Bold.eot");
//  src: url("../images/font/OpenSans/OpenSans-Bold.eot?#iefix") format("embedded-opentype"), ...other files...;
//  font-weight: 400;
//  font-style: italic;
//  font-stretch: normal;
// }
// \@font-face{
//  font-family: OpenSans;
//  src: url("../images/font/OpenSans/OpenSans.eot");
//  src: url("../images/font/OpenSans/OpenSans.eot?#iefix") format("embedded-opentype"), ...other files...;
//  font-weight: 400;
//  font-style: normal;
//  font-stretch: normal;
// }
// $fonts = {
//   lato: [ 'black', bold, regular, italic, light ]
// }

// @if variable-exists(icon) and map-has-key($icon, font-family){
//   $fonts: map-merge($fonts, (get($icon, font-family): '')) !global;
// }