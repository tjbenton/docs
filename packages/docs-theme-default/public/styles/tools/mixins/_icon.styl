/// @author Tyler Benton
/// @page tools/mixins
///
/// @description
/// This is used to add icon(s) to a CSS pseudo-elements.
///
///
/// @arg {list} - This can be a list of icons names
/// @arg {string} nth($icon-list, -1) - If the last argument is matches any of the following characters it will add it as a seperator ('', " ", "~", "`", "!", "@", "#", "$", "%", "^", "&", "*", "(", ")", "_", "+", "-", "=", "{", "}", "|", "[", "]", "\\", "<", ",", ".", ">", "?", ":", ";", "\'', "'", "x", "X")
///
/// @note {!!!} - It's required because of this dumb issue https:///github.com/sass/sass/issues/1395
///
/// @markup {styl} (example="false") **Example:** Without a sperator
/// .star {
///   &:before {
///     icon star, star, star, star
///   }
/// }
///
/// @markup {css} (example="false") **Output:** Without a sperator
/// .star:before {
///   content: '\e63b\e63b\e63b\e63b\e63b'
/// }
///
/// @markup {styl} (example="false") **Example:** With seperators
/// .star {
///   &:before {
///     icon star, star, star, star, star, '    +    '
///   }
/// }
///
/// @markup {css} (example="false") **Output:** With seperators
/// .star:before {
///   content: '\e63b    +    \e63b    +    \e63b    +    \e63b    +    \e63b'
/// }
icon($icon-list...)
  $result = ()
  $seperator = ''
  $last = last($icon-list)

  // finds the seperator if exists
  if length($icon-list) > 1 and type-of($last) == 'string' and (not $last in $icons)
    $is-sperator = true;
    for $char, $i in split('', $last)
      if !$char || match('[^a-z]|x|X', $char) == null
        $is-sperator = false

    if $is-sperator
      $seperator = pop($icon-list)

  // get the icon values
  for $icon in $icon-list
    if $icons[$icon]
      push($result, $icons[$icon])

  content join($seperator, $result)

/// @author Tyler Benton
/// @page tools/mixins
/// @description
/// This mixin adds the necessary styles to style pseudo elements for the icon font.
/// By Default the mixin will extend your selector onto the silenet selectors located in `_placeholders.scss`
///
/// @markup {styl} (example="false") **Example:**
/// .foo
///   icon-styles();
icon-styles()
  /{ensurePseudo(selector())}
    +cache('icon-styles')
      display inline-block
      // font-style font-variant font-weight font-size/line-height font-family
      font: normal normal normal $config.font-size/1em $icon.font-family; // shorthand saves 85 characters
      -moz-osx-font-smoothing grayscale
      -webkit-font-smoothing antialiased
      height 1em
      speak none
      text-indent 0
      text-rendering auto
      text-transform none
      user-select none
      width 1em
